package 상속기초;

public class Ex01Main {

	public static void main(String[] args) {

		// Ex01Parent 자료형 기반으로 p객체 생성
		Ex01Parent p = new Ex01Parent();   // Ex01Parent(); 기본생성자	
		p.makeJjam();
	    
		// Child자료형을 기반으로 c라는 객체 생성
		Child c = new Child();
		
		// 매서드 오버라이딩하면 오버리이딩 한 매서드를 호출해서 사용
		c.makeJjam();
		
		// 새로운 매서드 생성함 = 메모장도 작성했음 
		c.makeJjaa();
		
		// 객체의 형변환(Casting) = 반드시 상속관계에 있어야 함       //기본자료형은 데이터 크기로 형변환 
        // 	Ex01Parent, Child 클래스만 형변환 가능= 상속되있기 때문
		// 레퍼런스 자료형(객체)은 상속을 전제로 업,다운캐스팅~
		//  -->객체내의 필드 ,매서드에 접근권한 여부에 따라  강제(다운), 자동(업) 결정한다.
		
		// 1)업캐스팅: 자식으로 부모를 만든다. = 자동타입변환
		// 하위 객체로 상위 객체를 생성 가능하다
		// 서브(하위)클래스가 부모(슈퍼,상위)클래스 타입으로 자동 형변환하는 것
		
		// 부모자료형 변수명 = new 자식자료형();
		Ex01Parent p2 = new Child();   //자식으로 부모를 만든다  // Child()클래스의 매서드를 사용(재료사용) , 단 타입(틀)은 Ex01Parent
		p2.makeJjam();  // Child()에서  makeJjam()매서드를 호출한다. 수정된 내용을 받는다.(오버라이딩=재정의 된 것을 받는다)
		p2.makeTang();  // Child()에서  makeTang()매서드를 호출한다. 근데 매서드가 없다 그러나 부모를 상속하므로 부모의 makeTang()를 가져온다.
		
		// 2)다운캐스팅 : 
		// 부모 클래스 타입이 자식 클래스로 형변환 (강제)
		
		// Child c2 = (Child)new Ex01Parent();    //Exception 에러발생  // 틀은 Child 재료는 Parent //간단하게 큰거를 작은거에 넣으려니 강제로 형변환한다
		// 코드가 빨간줄이 뜬다 -->syntax 에러(구문오류) // 코드 작성시 빨간줄 에러
		// Exception 에러 : 구문 오류는 없지만 실행시 예외 상황이 발생하는 것! = 뮤직에서 다음곡으로 계속 넘길 때 코드는 정상인데 계속 넘기다 보면  콘솔창에서 오류가 발생하는 것 (자바책 153쪽참고)
		
		
		// 2)다운캐스팅 :
		Child c2 = (Child)p2; // 업캐스팅된 객체를 강제 형변환으로 본래의 자료형으로 되돌리는 것
		                      // 전제조건: 업캐스팅된 객체만 다운캐스팅 가능하다 // 고로 new Ex01Parent();같은 표현은 안되고 기존에 업캐스팅된 p2를 적용해야 한다
		
		// 본래 자신이 가지고 있던 매서드를 사용할 수 있다.
		c2.makeJjam();
		c2.makeTang();
		c2.makeJjaa();    
		
		// ***상속관계의 객체를 추가할 때 객체의 형변환(Casting) 적용할 수 있다.
		
		
		
		
		
		
		
		
		// 상속 특징 3가지
		// 1. 다중 상속 안됨  --> 한개의 부모 클래스만 상속 =내 부모는 하나이다
		// 2. 상속 횟수에 제한이 없다  --> 부모의 자식 또 자식 또자식에게 상속 예)족보
		// 3.모든 클래스는 오브젝트(최상위)를 기본으로 상속받음  --> 부모클래스도 오브젝트를 상속받는다 당연히 자식도 받는다 =예)공통의 조상 = java.lang.오브젝트
		// 자식은 부모것을 받지만 부모는 자식을 받을 수 없다.
		
		
		// 참고 파라미터,argument 등의 용어는 매서드의 매개변수을 가리키는 용어 
		
		
	}

}
